{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleAddPlaceName(e) {\n    setName(e.target.value);\n  }\n\n  function handleAddPlaceLink(e) {\n    setLink(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name,\n      link\n    });\n  }\n\n  React.useEffect(() => {\n    setName('');\n    setLink('');\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"new-card\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    submitButtonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: name || \"\",\n          onChange: handleAddPlaceName,\n          type: \"text\",\n          name: \"place\",\n          id: \"place\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          className: \"popup__text popup__text_type_place\",\n          required: true,\n          minLength: \"2\",\n          maxLength: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\",\n          id: \"place-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: link || \"\",\n          onChange: handleAddPlaceLink,\n          type: \"url\",\n          name: \"link\",\n          id: \"link\",\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n          className: \"popup__text popup__text_type_link\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\",\n          id: \"link-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddPlacePopup, \"4v59feAPT9go87//yRNdkEAP6r8=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/Users/user/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js"],"names":["React","PopupWithForm","AddPlacePopup","props","name","setName","useState","link","setLink","handleAddPlaceName","e","target","value","handleAddPlaceLink","handleSubmit","preventDefault","onAddPlace","useEffect","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;;AAEA,WAASG,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3BL,IAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,kBAAT,CAA4BH,CAA5B,EAA8B;AAC1BF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACK,cAAF;AAEAZ,IAAAA,KAAK,CAACa,UAAN,CAAiB;AACbZ,MAAAA,IADa;AAEbG,MAAAA;AAFa,KAAjB;AAIH;;AAEDP,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClBZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAHD,EAGG,CAACL,KAAK,CAACe,MAAP,CAHH;AAKA,sBACI,QAAC,aAAD;AACA,IAAA,KAAK,EAAC,+DADN;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,MAAM,EAAEf,KAAK,CAACe,MAHd;AAIA,IAAA,OAAO,EAAEf,KAAK,CAACgB,OAJf;AAKA,IAAA,gBAAgB,EAAC,4CALjB;AAMA,IAAA,QAAQ,EAAEL,YANV;AAAA,2BAOI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACQ;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA,gCACI;AAAO,UAAA,KAAK,EAAEV,IAAI,IAAI,EAAtB;AAA0B,UAAA,QAAQ,EAAEK,kBAApC;AAAwD,UAAA,IAAI,EAAC,MAA7D;AAAoE,UAAA,IAAI,EAAC,OAAzE;AAAiF,UAAA,EAAE,EAAC,OAApF;AAA4F,UAAA,WAAW,EAAC,kDAAxG;AAAmH,UAAA,SAAS,EAAC,oCAA7H;AAAkK,UAAA,QAAQ,MAA1K;AAA2K,UAAA,SAAS,EAAC,GAArL;AAAyL,UAAA,SAAS,EAAC;AAAnM;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAKQ;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAA,gCACI;AAAO,UAAA,KAAK,EAAEF,IAAI,IAAI,EAAtB;AAA0B,UAAA,QAAQ,EAAEM,kBAApC;AAAwD,UAAA,IAAI,EAAC,KAA7D;AAAmE,UAAA,IAAI,EAAC,MAAxE;AAA+E,UAAA,EAAE,EAAC,MAAlF;AAAyF,UAAA,WAAW,EAAC,oGAArG;AAA0H,UAAA,SAAS,EAAC,mCAApI;AAAwK,UAAA,QAAQ;AAAhL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA9CQX,a;;KAAAA,a;AAgDT,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [name, setName] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n\r\n    function handleAddPlaceName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleAddPlaceLink(e){\r\n        setLink(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onAddPlace({\r\n            name,\r\n            link\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setName('');\r\n        setLink('');\r\n    }, [props.isOpen])\r\n\r\n    return (\r\n        <PopupWithForm\r\n        title=\"Новое место\"\r\n        name=\"new-card\"\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        submitButtonText=\"Создать\"\r\n        onSubmit={handleSubmit}>\r\n            <div className=\"popup__container\">\r\n                    <label className=\"popup__label\">\r\n                        <input value={name || \"\"} onChange={handleAddPlaceName} type=\"text\" name=\"place\" id=\"place\" placeholder=\"Название\" className=\"popup__text popup__text_type_place\" required minLength=\"2\" maxLength=\"30\" />\r\n                        <span className=\"popup__error\" id=\"place-error\"></span>\r\n                    </label>\r\n                    <label className=\"popup__label\">\r\n                        <input value={link || \"\"} onChange={handleAddPlaceLink} type=\"url\" name=\"link\" id=\"link\" placeholder=\"Ссылка на картинку\" className=\"popup__text popup__text_type_link\" required />\r\n                        <span className=\"popup__error\" id=\"link-error\"></span>\r\n                    </label>\r\n            </div>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}