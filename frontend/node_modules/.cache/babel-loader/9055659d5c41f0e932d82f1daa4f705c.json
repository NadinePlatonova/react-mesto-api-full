{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getUserInfo() {\n    const url = `${this._baseUrl}/users/me`;\n    return fetch(url, {\n      headers: this._headers\n    }).then(this._checkResponseStatus);\n  }\n\n  editUserInfo(data) {\n    const url = `${this._baseUrl}/users/me`;\n    return fetch(url, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.role\n      })\n    }).then(this._checkResponseStatus);\n  }\n\n  addNewCard(data) {\n    const url = `${this._baseUrl}/cards`;\n    return fetch(url, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.place,\n        link: data.link\n      })\n    }).then(this._checkResponseStatus);\n  }\n\n  getInitialCards() {\n    const url = `${this._baseUrl}/cards`;\n    return fetch(url, {\n      headers: this._headers\n    }).then(this._checkResponseStatus);\n  }\n\n  patchAvatar(data) {\n    const url = `${this._baseUrl}/users/me/avatar`;\n    return fetch(url, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(this._checkResponseStatus);\n  }\n\n  deleteCard(cardId) {\n    const url = `${this._baseUrl}/cards/${cardId}`;\n    return fetch(url, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponseStatus);\n  }\n\n  putLike(cardId, isLiked) {\n    const url = `${this._baseUrl}/cards/likes/${cardId}`;\n    return fetch(url, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    }).then(this._checkResponseStatus);\n  }\n\n  deleteLike(cardId) {\n    const url = `${this._baseUrl}/cards/likes/${cardId}`;\n    return fetch(url, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponseStatus);\n  }\n\n  _checkResponseStatus(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-27',\n  headers: {\n    authorization: '362a2219-41f2-4a3b-84cc-680eb976a5f4',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["C:/Users/user/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","getUserInfo","url","fetch","then","_checkResponseStatus","editUserInfo","data","method","body","JSON","stringify","name","about","role","addNewCard","place","link","getInitialCards","patchAvatar","avatar","deleteCard","cardId","putLike","isLiked","deleteLike","res","ok","Promise","reject","status","json","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    getUserInfo() {\r\n        const url = `${this._baseUrl}/users/me`\r\n        return fetch(url, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    editUserInfo(data) {\r\n        const url = `${this._baseUrl}/users/me`\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.role\r\n            })\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    addNewCard(data) {\r\n        const url = `${this._baseUrl}/cards`\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.place,\r\n                link: data.link\r\n            })\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    getInitialCards() {\r\n        const url = `${this._baseUrl}/cards`\r\n        return fetch(url, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    patchAvatar(data) {\r\n        const url = `${this._baseUrl}/users/me/avatar`\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data.link\r\n            })\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        const url = `${this._baseUrl}/cards/${cardId}`\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    putLike(cardId, isLiked) {\r\n        const url = `${this._baseUrl}/cards/likes/${cardId}`\r\n        return fetch(url, {\r\n            method: isLiked ? 'DELETE' : 'PUT',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n        const url = `${this._baseUrl}/cards/likes/${cardId}`\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    _checkResponseStatus(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n        return res.json();\r\n    }\r\n}\r\n\r\nexport const api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-27',\r\n    headers: {\r\n        authorization: '362a2219-41f2-4a3b-84cc-680eb976a5f4',\r\n        'Content-Type': 'application/json'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}