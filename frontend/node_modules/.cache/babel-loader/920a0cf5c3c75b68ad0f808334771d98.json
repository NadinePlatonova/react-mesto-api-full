{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as auth from '../utils/auth';\nimport InfoTooltip from './InfoTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  _s();\n\n  const [isSuccess, setIsSuccess] = React.useState(true);\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const history = useHistory();\n\n  function handlePasswordEdit(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleEmailEdit(e) {\n    setEmail(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    auth.register(email, password).then(res => {\n      if (res) {\n        setIsSuccess(true);\n        setIsInfoTooltipOpen(true);\n      } else {\n        setIsSuccess(false);\n        setIsInfoTooltipOpen(true);\n      }\n    });\n  }\n\n  function closeInfoTooltip() {\n    setIsInfoTooltipOpen(false);\n\n    if (isSuccess) {\n      history.push('/sign-in');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reg-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg-login__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"reg-login__title\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"reg-login__form\",\n        name: \"login\",\n        action: \"#\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: handleEmailEdit,\n          className: \"reg-login__input\",\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: handlePasswordEdit,\n          className: \"reg-login__input\",\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reg-login__button\",\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg-login__sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reg-login__caption\",\n        children: \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-in\",\n        className: \"reg-login__link\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n      isSuccess: isSuccess,\n      isOpen: isInfoTooltipOpen,\n      onClose: closeInfoTooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"YtpKCef0BvsezA2MoQmfn3mC93U=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/user/dev/react-mesto-auth/src/components/Register.js"],"names":["React","Link","useHistory","auth","InfoTooltip","Register","props","isSuccess","setIsSuccess","useState","email","setEmail","password","setPassword","isInfoTooltipOpen","setIsInfoTooltipOpen","history","handlePasswordEdit","e","target","value","handleEmailEdit","handleSubmit","preventDefault","register","then","res","closeInfoTooltip","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as auth from '../utils/auth';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\nfunction Register(props) {\r\n    const [isSuccess, setIsSuccess] = React.useState(true);\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\r\n    const history = useHistory();\r\n\r\n    function handlePasswordEdit(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function handleEmailEdit(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        auth.register(email, password)\r\n        .then((res) => {\r\n            if (res) {\r\n                setIsSuccess(true);\r\n                setIsInfoTooltipOpen(true);\r\n            } else {\r\n                setIsSuccess(false);\r\n                setIsInfoTooltipOpen(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    function closeInfoTooltip() {\r\n        setIsInfoTooltipOpen(false);\r\n        if (isSuccess) {\r\n            history.push('/sign-in')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"reg-login\">\r\n            <div className=\"reg-login__container\">\r\n                <h2 className=\"reg-login__title\">Регистрация</h2>\r\n                <form className=\"reg-login__form\" name=\"login\" action=\"#\" onSubmit={handleSubmit}>\r\n                    <input value={email} onChange={handleEmailEdit} className=\"reg-login__input\" id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\" required></input>\r\n                    <input value={password} onChange={handlePasswordEdit} className=\"reg-login__input\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Пароль\" required></input>\r\n                    <button className=\"reg-login__button\" type=\"submit\">Зарегистрироваться</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"reg-login__sign-in\">\r\n                <p className=\"reg-login__caption\">Уже зарегистрированы? &nbsp;</p>\r\n                <Link to=\"/sign-in\" className=\"reg-login__link\">Войти</Link>\r\n            </div>\r\n            <InfoTooltip isSuccess={isSuccess} isOpen={isInfoTooltipOpen} onClose={closeInfoTooltip} /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}