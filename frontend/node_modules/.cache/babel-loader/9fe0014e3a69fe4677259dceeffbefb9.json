{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\dev\\\\mesto-react\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { api } from '../utils/api';\nimport Card from './Card';\nimport Loader from './loader/Loader';\nimport './loader/Loader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n  const [isLoader, setIsLoader] = React.useState(false);\n  React.useEffect(() => {\n    setIsLoader(true);\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([res, cards]) => {\n      setUserName(res.name);\n      setUserDescription(res.about);\n      setUserAvatar(res.avatar);\n      setCards(cards.reverse());\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoader(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: isLoader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 37\n    }, this) : \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          src: userAvatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__button-background\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"profile__edit-avatar\",\n            \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n            onClick: props.onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__name\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__role\",\n          children: userDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"profile__edit-button\",\n          \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n          onClick: props.onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"elements__list\",\n        children: cards.map(item => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            card: item,\n            onCardClick: props.onCardClick\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"WmnW1103dyBpBLSPQi4tbLenLv8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/user/dev/mesto-react/src/components/Main.js"],"names":["React","api","Card","Loader","Main","props","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","isLoader","setIsLoader","useEffect","Promise","all","getUserInfo","getInitialCards","then","res","name","about","avatar","reverse","catch","err","console","log","finally","onEditAvatar","onEditProfile","onAddPlace","map","item","onCardClick","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,qBAAP;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACQ,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAhC;AAIAR,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAClB,GAAG,CAACmB,WAAJ,EAAD,EAAoBnB,GAAG,CAACoB,eAAJ,EAApB,CAAZ,EACCC,IADD,CACM,CAAC,CAACC,GAAD,EAAMV,KAAN,CAAD,KAAkB;AACpBN,MAAAA,WAAW,CAACgB,GAAG,CAACC,IAAL,CAAX;AACAd,MAAAA,kBAAkB,CAACa,GAAG,CAACE,KAAL,CAAlB;AACAb,MAAAA,aAAa,CAACW,GAAG,CAACG,MAAL,CAAb;AACAZ,MAAAA,QAAQ,CAACD,KAAK,CAACc,OAAN,EAAD,CAAR;AACH,KAND,EAOCC,KAPD,CAOQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATD,EAUCG,OAVD,CAUS,MAAM;AACXhB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAZD;AAaH,GAfD,EAeG,EAfH;AAiBA,sBACI;AAAM,IAAA,SAAS,EAAED,QAAQ,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAe,SAAxC;AAAA,4BACI;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,GAAG,EAAEJ,UAAtC;AAAkD,UAAA,GAAG,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,sBAAhC;AAAuD,0BAAW,qHAAlE;AAAyF,YAAA,OAAO,EAAEN,KAAK,CAAC4B;AAAxG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+B3B;AAA/B;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,oBAA8BG;AAA9B;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAuD,wBAAW,2HAAlE;AAA0F,UAAA,OAAO,EAAEJ,KAAK,CAAC6B;AAAzG;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,qBAAhC;AAAsD,QAAA,OAAO,EAAE7B,KAAK,CAAC8B;AAArE;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBACKtB,KAAK,CAACuB,GAAN,CAAWC,IAAD,IAAU;AACjB,8BACI,QAAC,IAAD;AAAqB,YAAA,IAAI,EAAEA,IAA3B;AAAiC,YAAA,WAAW,EAAEhC,KAAK,CAACiC;AAApD,aAAWD,IAAI,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GApDQnC,I;;KAAAA,I;AAsDT,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport { api } from '../utils/api';\r\nimport Card from './Card';\r\nimport Loader from './loader/Loader';\r\nimport './loader/Loader.css';\r\n\r\nfunction Main(props) {\r\n    const [userName, setUserName] = React.useState('')\r\n    const [userDescription, setUserDescription] = React.useState('')\r\n    const [userAvatar, setUserAvatar] = React.useState('')\r\n    const [cards, setCards] = React.useState([])\r\n    const [isLoader, setIsLoader] = React.useState(false)\r\n\r\n    \r\n\r\n    React.useEffect(() => {\r\n        setIsLoader(true)\r\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n        .then(([res, cards]) => {\r\n            setUserName(res.name)\r\n            setUserDescription(res.about)\r\n            setUserAvatar(res.avatar)\r\n            setCards(cards.reverse())\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally(() => {\r\n            setIsLoader(false)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <main className={isLoader ? <Loader/> : \"content\"}>\r\n            <section className=\"profile\">\r\n                <div className=\"profile__info\">\r\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар профиля\" />\r\n                    <div className=\"profile__button-background\">\r\n                        <button type=\"button\" className=\"profile__edit-avatar\" aria-label=\"Редактировать аватар\" onClick={props.onEditAvatar}></button>\r\n                    </div> \r\n                    <h1 className=\"profile__name\">{userName}</h1>\r\n                    <p className=\"profile__role\">{userDescription}</p>\r\n                    <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать профиль\" onClick={props.onEditProfile}></button>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__list\">\r\n                    {cards.map((item) => {\r\n                        return (\r\n                            <Card key={item._id} card={item} onCardClick={props.onCardClick}/>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main"]},"metadata":{},"sourceType":"module"}