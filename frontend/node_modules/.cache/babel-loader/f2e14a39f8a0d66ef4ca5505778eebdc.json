{"ast":null,"code":"import _classCallCheck from\"C:/Users/user/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/user/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"getUserInfo\",value:function getUserInfo(){var url=\"\".concat(this._baseUrl,\"/users/me\");return fetch(url,{headers:this._headers}).then(this._checkResponseStatus);}},{key:\"editUserInfo\",value:function editUserInfo(data){var url=\"\".concat(this._baseUrl,\"/users/me\");return fetch(url,{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.role})}).then(this._checkResponseStatus);}},{key:\"addNewCard\",value:function addNewCard(data){var url=\"\".concat(this._baseUrl,\"/cards\");return fetch(url,{method:'POST',headers:this._headers,body:JSON.stringify({name:data.place,link:data.link})}).then(this._checkResponseStatus);}},{key:\"getInitialCards\",value:function getInitialCards(){var url=\"\".concat(this._baseUrl,\"/cards\");return fetch(url,{headers:this._headers}).then(this._checkResponseStatus);}},{key:\"patchAvatar\",value:function patchAvatar(data){var url=\"\".concat(this._baseUrl,\"/users/me/avatar\");return fetch(url,{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.link})}).then(this._checkResponseStatus);}},{key:\"deleteCard\",value:function deleteCard(cardId){var url=\"\".concat(this._baseUrl,\"/cards/\").concat(cardId);return fetch(url,{method:'DELETE',headers:this._headers}).then(this._checkResponseStatus);}},{key:\"putLike\",value:function putLike(cardId,isLiked){var url=\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId);return fetch(url,{method:isLiked?'DELETE':'PUT',headers:this._headers}).then(this._checkResponseStatus);}},{key:\"deleteLike\",value:function deleteLike(cardId){var url=\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId);return fetch(url,{method:'DELETE',headers:this._headers}).then(this._checkResponseStatus);}},{key:\"_checkResponseStatus\",value:function _checkResponseStatus(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}}]);return Api;}();export var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-27',headers:{authorization:'362a2219-41f2-4a3b-84cc-680eb976a5f4','Content-Type':'application/json'}});","map":{"version":3,"sources":["C:/Users/user/dev/mesto-react/src/utils/api.js"],"names":["Api","options","_baseUrl","baseUrl","_headers","headers","url","fetch","then","_checkResponseStatus","data","method","body","JSON","stringify","name","about","role","place","link","avatar","cardId","isLiked","res","ok","Promise","reject","status","json","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    getUserInfo() {\r\n        const url = `${this._baseUrl}/users/me`\r\n        return fetch(url, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    editUserInfo(data) {\r\n        const url = `${this._baseUrl}/users/me`\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.role\r\n            })\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    addNewCard(data) {\r\n        const url = `${this._baseUrl}/cards`\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.place,\r\n                link: data.link\r\n            })\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    getInitialCards() {\r\n        const url = `${this._baseUrl}/cards`\r\n        return fetch(url, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    patchAvatar(data) {\r\n        const url = `${this._baseUrl}/users/me/avatar`\r\n        return fetch(url, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data.link\r\n            })\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        const url = `${this._baseUrl}/cards/${cardId}`\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    putLike(cardId, isLiked) {\r\n        const url = `${this._baseUrl}/cards/likes/${cardId}`\r\n        return fetch(url, {\r\n            method: isLiked ? 'DELETE' : 'PUT',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n        const url = `${this._baseUrl}/cards/likes/${cardId}`\r\n        return fetch(url, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponseStatus);\r\n    }\r\n\r\n    _checkResponseStatus(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n        return res.json();\r\n    }\r\n}\r\n\r\nexport const api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-27',\r\n    headers: {\r\n        authorization: '362a2219-41f2-4a3b-84cc-680eb976a5f4',\r\n        'Content-Type': 'application/json'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}